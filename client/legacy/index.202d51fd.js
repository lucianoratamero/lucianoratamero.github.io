import{_ as e,a,b as o,c as s,i as r,d as n,S as t,s as i,J as c,B as m,K as d,L as u,g as p,j as l,C as v,h as f,M as h,q as g,N as q,l as b,o as E}from"./client.b5ae4b81.js";import{c as x,i as P,a as C,b as M,d as z}from"./4-registering-component.61f1b1f9.js";function T(e){var s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var r,n=a(e);if(s){var t=a(this).constructor;r=Reflect.construct(n,arguments,t)}else r=n.apply(this,arguments);return o(this,r)}}function j(e){var a,o,s,r,n,t,i,T,j,D,I,N,S,L,R,O,A,k,G,H,y,w,F,U,B,K,V,Z,J,_,Q,W,X,Y,$,ee,ae,oe,se,re,ne,te,ie,ce,me,de,ue,pe,le,ve,fe,he,ge,qe,be,Ee,xe,Pe,Ce,Me,ze,Te,je,De,Ie,Ne,Se,Le,Re,Oe,Ae,ke,Ge,He,ye,we,Fe,Ue,Be,Ke,Ve,Ze,Je,_e,Qe,We,Xe,Ye,$e,ea,aa,oa,sa,ra,na,ta,ia,ca,ma,da,ua,pa,la,va,fa,ha,ga,qa,ba,Ea,xa,Pa,Ca,Ma,za,Ta,ja,Da,Ia,Na,Sa,La,Ra,Oa,Aa,ka,Ga,Ha,ya,wa,Fa,Ua,Ba,Ka,Va,Za,Ja,_a,Qa,Wa,Xa,Ya,$a,eo,ao,oo,so,ro,no,to,io,co,mo,uo,po,lo,vo,fo,ho,go,qo,bo,Eo,xo,Po,Co,Mo,zo,To,jo,Do,Io,No,So,Lo,Ro,Oo,Ao,ko,Go,Ho;return{c:function(){a=c("meta"),o=c("meta"),s=m(),r=c("h1"),n=c("mark"),t=d("Mantendo o estado global de uma maneira sã com rel-events"),i=m(),T=c("p"),j=d("2019-09-19"),D=m(),I=c("figure"),N=c("img"),L=m(),R=c("p"),O=c("em"),A=d("for native english speakers,\n    "),k=c("a"),G=d("here's\n      the translated post"),H=m(),y=c("p"),w=d("Manter uma aplicação react grande e complexa não é um trabalho pra amadores.\n  Não importa o que você escolher para lidar com a máquina de estados da\n  aplicação, é quase certo de que é algo difícil de aprender, como redux, ou\n  realmente complicado, como fazer uma camada de serviços na mão. Com o objetivo\n  de fazer com que novas pessoas possam entrar fácil nos projetos, a galera da\n  Labcodes decidiu que tava na hora de dar mais atenção e uma verdadeira solução\n  pra esse tipo de problema. Nossa resposta foi criar a biblioteca\n  "),F=c("a"),U=d("rel-events"),B=d("."),K=m(),V=c("h2"),Z=d("Pra que mais uma biblioteca para gerenciar estado?"),J=m(),_=c("p"),Q=c("a"),W=c("img"),X=m(),Y=c("p"),$=d("Sempre que eu penso em criar uma biblioteca nova, essa tirinha do xkcd vem me\n  assombrar. Acreditem, eu não quero ser o tipo de pessoa que faz tudo por conta\n  própria em vez de contribuir com algo que já existe, e esse é um dos problemas\n  com essa mentalidade de forkar tudo. No entanto, eu sempre quis resolver um\n  problema com o qual eu lido diariamente: usar uma biblioteca qualquer pra\n  separar lógica de negócio/domínio dos meus componentes react."),ee=m(),ae=c("p"),oe=d("Mas no fim do dia, depois de pensar muito, acabo me rendendo e rodando o\n  clássico\n  "),se=c("code"),re=d("npm install redux react-redux --save"),ne=d(". Eu até compartilhei algumas\n  das ferramentas que eu uso com redux na nossa outra lib\n  "),te=c("a"),ie=c("code"),ce=d("react-redux-api-tools"),me=d("."),de=m(),ue=c("p"),pe=d("Não ache que eu odeio o redux; pelo contrário, eu amo. Ele cumpre sua função,\n  é ultra flexível, com poucos efeitos colaterais. Mas vamos ser sinceros: o\n  desconforto quando lemos\n  "),le=c("code"),ve=d("mapStateToProps"),fe=d("\n  pela primeira vez é\n  "),he=c("strong"),ge=d("real"),qe=d(". Demorei um bom tempo pra entender o que tava\n  acontecendo de verdade. E ainda tem actions, action creators, reducers,\n  dispatches e middlewares, e sagas, e async dispatches; o aprendizado nunca\n  acaba."),be=m(),Ee=c("p"),xe=d("Depois dos primeiros confusos meses, lidar com o redux fica mais fácil (como\n  quase tudo na vida), mas muito,\n  "),Pe=c("strong"),Ce=d("muito"),Me=d("\n  mais verboso. Eu sempre pensei que o redux parecia uma biblioteca muito baixo\n  nível e que eu sempre sou obrigado a especificar, passo a passo, exatamente e\n  estritamente o que precisa ser feito. Zero abstração. E muita cópia e cola."),ze=m(),Te=c("p"),je=d("Cheguei à conclusão de que seria ótimo ter todas as features que gosto na\n  minha configuração do redux - um fluxo para HTTP bem definido, menos\n  repetição, conexão semântica entre actions e reducers -, sem sacrificar nada.\n  Daí me deram a luz verde pra desenvolver internamente uma solução pra isso:\n  "),De=c("code"),Ie=d("rel-events"),Ne=d("."),Se=m(),Le=c("h2"),Re=d("Legal, mas o que raios é "),Oe=c("code"),Ae=d("rel-events"),ke=d("?"),Ge=m(),He=c("p"),ye=c("code"),we=d("rel-events"),Fe=d("\n  é uma biblioteca de eventos para react (React Events Library, por isso rel\n  ;]). Ela leva o conceito de eventos, que já existe no redux, pra um nível mais\n  alto de abstração. É uma camada fina por cima do redux que permite que você\n  pare de pensar em actions, reducers, stores e middlewares, pra que você possa\n  focar no que precisa ser feito, que é executar lógica de negócio de forma\n  reativa quando eventos acontecem."),Ue=m(),Be=c("p"),Ke=d("Pra isso, vou propor que a gente imagine um cenário bem comum: precisamos\n  fazer com que um usuário faça login na nossa aplicação."),Ve=m(),Ze=c("p"),Je=d("Nós poderíamos fazer todo o fluxo de requisições dentro dos próprios\n  componentes, mas\n  "),_e=c("a"),Qe=d("como\n    dissemos no nosso outro post"),We=d(", nós não exatamente recomendamos esse\n  caminho - sempre termina com código macarronado. Nós poderíamos usar redux,\n  mas aí nossos devs juniors precisariam antes passar pela barreira do\n  "),Xe=c("code"),Ye=d("mapStateToProps"),$e=d(", e às vezes nós não temos tempo de falar sobre\n  absolutamente tudo de redux antes de entregar nossos projetos. Nós poderíamos\n  usar sagas, mas aí o redux volta pra nos atazanar em dobro."),ea=m(),aa=c("p"),oa=d("Então, vamos por uns minutos esquecer de actions e reducers e imaginemos um\n  objeto chamado LoginEvent. Sempre que executamos algo sobre esse objeto\n  passando email e senha, coisas acontecem e os dados corretos (de sucesso ou\n  falha do login) são passados pros componentes. Imagine que você não precise\n  saber nada sobre esse objeto, apenas seu nome. Sem reducers, sem actions, sem\n  "),sa=c("code"),ra=d("connect"),na=d("\n  ou\n  "),ta=c("code"),ia=d("mapStateToProps"),ca=d(". Seria algo mais ou menos assim:"),ma=m(),da=c("figure"),ua=c("img"),la=m(),va=c("p"),fa=d("Legal, mas onde colocaríamos todo seu comportamento? Onde tá o código que faz\n  a requisição? Como lidar com casos de erro? Digamos que, além do objeto de\n  evento, nós tenhamos algo que gerencia todo o fluxo do evento, que chamaríamos\n  de Event Manager:"),ha=m(),ga=c("figure"),qa=c("img"),Ea=m(),xa=c("p"),Pa=d("Melhor. Mas como esse manager tá implementado? Porque, se a gente precisa\n  lidar com o fluxo inteiro dentro dele, ele precisa saber de muita coisa: como\n  fazer a requisição, por exemplo, ou o que fazer com o estado global quando a\n  requisição tiver sucesso ou falha. Ah, e seria bom ter um estado intermediário\n  quando a requisição começa, porque a gente ama spinners de loading! Eita,\n  esqueci que eu preciso de um estado inicial pra esse evento também, pra gente\n  ter dados antes mesmo da requisição. Calma, calma, vamo lá:"),Ca=m(),Ma=c("figure"),za=c("img"),ja=m(),Da=c("p"),Ia=d("É mais ou menos isso que a gente precisa, né? Mas então, como que a gente\n  faria pra registrar quais Componentes que poderiam disparar esse Evento? Como\n  que o Componente pegaria os dados desse evento? Tamo quase lá:"),Na=m(),Sa=c("figure"),La=c("img"),Oa=m(),Aa=c("p"),ka=d("E essa é exatamente a API atual para um Evento HTTP (HTTPEvent) da lib\n  "),Ga=c("code"),Ha=d("rel-events"),ya=d(". Nada de actions nem reducers, nada de acoplar as\n  camadas de domínio com a de componentes, nada. Claro, a gente precisaria antes\n  configurar como nossa lib se encaixa com o redux, mas geralmente é uma\n  configuração de uma vez só, e muito bem documentada\n  "),wa=c("a"),Fa=d("na nossa\n    documentação (ainda só em inglês, com português em breve"),Ua=d(")."),Ba=m(),Ka=c("h2"),Va=d("Isso parece... bom! Mas e as funcionalidades? Eu quero features!"),Za=m(),Ja=c("p"),_a=d("Na nossa atual versão beta (0.1.3, de Setembro de 2019), você pode:"),Qa=m(),Wa=c("ul"),Xa=c("li"),Ya=d("usar um Evento (Event) básico (pras horas em que você não precisa fazer\n    requisições);"),$a=m(),eo=c("li"),ao=d("encadear um Event/HTTPEvent em outro (útil pra quando você quer buscar mais\n    dados depois que um evento teve sucesso);"),oo=m(),so=c("li"),ro=d("ter múltiplos Events registrados para um mesmo Componente (porque você\n    provavelmente vai ter um Componente que precisa ler dados de vários\n    lugares);"),no=m(),to=c("li"),io=d("executar código depois das mudanças de estado de um Evento que foi disparado\n    (usando\n    "),co=c("code"),mo=d("afterDispatch"),uo=d(");"),po=m(),lo=c("li"),vo=d("executar código depois das mudanças de estado de uma requisição que teve\n    sucesso (usando\n    "),fo=c("code"),ho=d("afterSuccess"),go=d(");"),qo=m(),bo=c("li"),Eo=d("executar código depois das mudanças de estado de uma requisição que falhou\n    (usando\n    "),xo=c("code"),Po=d("afterFailure"),Co=d(");"),Mo=m(),zo=c("li"),To=d("avaliar se um evento deve ser disparado ou não (com o método\n    "),jo=c("code"),Do=d("shouldDispatch"),Io=d("\n    do EventManager)."),No=m(),So=c("p"),Lo=d("E muito mais! Tudo isso sem a carga cognitiva, sem as constantes aleatórias,\n  sem os nomes de store manuais e toda a má experiência de desenvolvimento do\n  redux. E a melhor parte: sem uma grande curva de aprendizado. Esse post tem\n  basicamente tudo que você precisa saber pra usar nossa biblioteca no\n  dia-a-dia. Mesmo. Eu sei, porque tô usando!"),Ro=m(),Oo=c("p"),Ao=d("Então se você gostou,\n  "),ko=c("a"),Go=d("dá uma olhada no nosso\n    repositório no github"),Ho=d("\n  pra começar a usar e comparilhe o amor! Valeu pela atenção, e eu vejo vocês na\n  próxima!"),this.h()},l:function(e){var c=u('[data-svelte="svelte-nu5ue2"]',document.head);a=p(c,"META",{name:!0,content:!0}),o=p(c,"META",{name:!0,content:!0}),c.forEach(l),s=v(e),r=p(e,"H1",{});var m=f(r);n=p(m,"MARK",{});var d=f(n);t=h(d,"Mantendo o estado global de uma maneira sã com rel-events"),d.forEach(l),m.forEach(l),i=v(e),T=p(e,"P",{class:!0});var g=f(T);j=h(g,"2019-09-19"),g.forEach(l),D=v(e),I=p(e,"FIGURE",{});var q=f(I);N=p(q,"IMG",{src:!0,alt:!0}),q.forEach(l),L=v(e),R=p(e,"P",{});var b=f(R);O=p(b,"EM",{});var E=f(O);A=h(E,"for native english speakers,\n    "),k=p(E,"A",{href:!0});var x=f(k);G=h(x,"here's\n      the translated post"),x.forEach(l),E.forEach(l),b.forEach(l),H=v(e),y=p(e,"P",{});var P=f(y);w=h(P,"Manter uma aplicação react grande e complexa não é um trabalho pra amadores.\n  Não importa o que você escolher para lidar com a máquina de estados da\n  aplicação, é quase certo de que é algo difícil de aprender, como redux, ou\n  realmente complicado, como fazer uma camada de serviços na mão. Com o objetivo\n  de fazer com que novas pessoas possam entrar fácil nos projetos, a galera da\n  Labcodes decidiu que tava na hora de dar mais atenção e uma verdadeira solução\n  pra esse tipo de problema. Nossa resposta foi criar a biblioteca\n  "),F=p(P,"A",{href:!0});var C=f(F);U=h(C,"rel-events"),C.forEach(l),B=h(P,"."),P.forEach(l),K=v(e),V=p(e,"H2",{});var M=f(V);Z=h(M,"Pra que mais uma biblioteca para gerenciar estado?"),M.forEach(l),J=v(e),_=p(e,"P",{});var z=f(_);Q=p(z,"A",{href:!0});var S=f(Q);W=p(S,"IMG",{src:!0,alt:!0}),S.forEach(l),z.forEach(l),X=v(e),Y=p(e,"P",{});var pa=f(Y);$=h(pa,"Sempre que eu penso em criar uma biblioteca nova, essa tirinha do xkcd vem me\n  assombrar. Acreditem, eu não quero ser o tipo de pessoa que faz tudo por conta\n  própria em vez de contribuir com algo que já existe, e esse é um dos problemas\n  com essa mentalidade de forkar tudo. No entanto, eu sempre quis resolver um\n  problema com o qual eu lido diariamente: usar uma biblioteca qualquer pra\n  separar lógica de negócio/domínio dos meus componentes react."),pa.forEach(l),ee=v(e),ae=p(e,"P",{});var ba=f(ae);oe=h(ba,"Mas no fim do dia, depois de pensar muito, acabo me rendendo e rodando o\n  clássico\n  "),se=p(ba,"CODE",{});var Ta=f(se);re=h(Ta,"npm install redux react-redux --save"),Ta.forEach(l),ne=h(ba,". Eu até compartilhei algumas\n  das ferramentas que eu uso com redux na nossa outra lib\n  "),te=p(ba,"A",{href:!0});var Ra=f(te);ie=p(Ra,"CODE",{});var yo=f(ie);ce=h(yo,"react-redux-api-tools"),yo.forEach(l),Ra.forEach(l),me=h(ba,"."),ba.forEach(l),de=v(e),ue=p(e,"P",{});var wo=f(ue);pe=h(wo,"Não ache que eu odeio o redux; pelo contrário, eu amo. Ele cumpre sua função,\n  é ultra flexível, com poucos efeitos colaterais. Mas vamos ser sinceros: o\n  desconforto quando lemos\n  "),le=p(wo,"CODE",{});var Fo=f(le);ve=h(Fo,"mapStateToProps"),Fo.forEach(l),fe=h(wo,"\n  pela primeira vez é\n  "),he=p(wo,"STRONG",{});var Uo=f(he);ge=h(Uo,"real"),Uo.forEach(l),qe=h(wo,". Demorei um bom tempo pra entender o que tava\n  acontecendo de verdade. E ainda tem actions, action creators, reducers,\n  dispatches e middlewares, e sagas, e async dispatches; o aprendizado nunca\n  acaba."),wo.forEach(l),be=v(e),Ee=p(e,"P",{});var Bo=f(Ee);xe=h(Bo,"Depois dos primeiros confusos meses, lidar com o redux fica mais fácil (como\n  quase tudo na vida), mas muito,\n  "),Pe=p(Bo,"STRONG",{});var Ko=f(Pe);Ce=h(Ko,"muito"),Ko.forEach(l),Me=h(Bo,"\n  mais verboso. Eu sempre pensei que o redux parecia uma biblioteca muito baixo\n  nível e que eu sempre sou obrigado a especificar, passo a passo, exatamente e\n  estritamente o que precisa ser feito. Zero abstração. E muita cópia e cola."),Bo.forEach(l),ze=v(e),Te=p(e,"P",{});var Vo=f(Te);je=h(Vo,"Cheguei à conclusão de que seria ótimo ter todas as features que gosto na\n  minha configuração do redux - um fluxo para HTTP bem definido, menos\n  repetição, conexão semântica entre actions e reducers -, sem sacrificar nada.\n  Daí me deram a luz verde pra desenvolver internamente uma solução pra isso:\n  "),De=p(Vo,"CODE",{});var Zo=f(De);Ie=h(Zo,"rel-events"),Zo.forEach(l),Ne=h(Vo,"."),Vo.forEach(l),Se=v(e),Le=p(e,"H2",{});var Jo=f(Le);Re=h(Jo,"Legal, mas o que raios é "),Oe=p(Jo,"CODE",{});var _o=f(Oe);Ae=h(_o,"rel-events"),_o.forEach(l),ke=h(Jo,"?"),Jo.forEach(l),Ge=v(e),He=p(e,"P",{});var Qo=f(He);ye=p(Qo,"CODE",{});var Wo=f(ye);we=h(Wo,"rel-events"),Wo.forEach(l),Fe=h(Qo,"\n  é uma biblioteca de eventos para react (React Events Library, por isso rel\n  ;]). Ela leva o conceito de eventos, que já existe no redux, pra um nível mais\n  alto de abstração. É uma camada fina por cima do redux que permite que você\n  pare de pensar em actions, reducers, stores e middlewares, pra que você possa\n  focar no que precisa ser feito, que é executar lógica de negócio de forma\n  reativa quando eventos acontecem."),Qo.forEach(l),Ue=v(e),Be=p(e,"P",{});var Xo=f(Be);Ke=h(Xo,"Pra isso, vou propor que a gente imagine um cenário bem comum: precisamos\n  fazer com que um usuário faça login na nossa aplicação."),Xo.forEach(l),Ve=v(e),Ze=p(e,"P",{});var Yo=f(Ze);Je=h(Yo,"Nós poderíamos fazer todo o fluxo de requisições dentro dos próprios\n  componentes, mas\n  "),_e=p(Yo,"A",{href:!0});var $o=f(_e);Qe=h($o,"como\n    dissemos no nosso outro post"),$o.forEach(l),We=h(Yo,", nós não exatamente recomendamos esse\n  caminho - sempre termina com código macarronado. Nós poderíamos usar redux,\n  mas aí nossos devs juniors precisariam antes passar pela barreira do\n  "),Xe=p(Yo,"CODE",{});var es=f(Xe);Ye=h(es,"mapStateToProps"),es.forEach(l),$e=h(Yo,", e às vezes nós não temos tempo de falar sobre\n  absolutamente tudo de redux antes de entregar nossos projetos. Nós poderíamos\n  usar sagas, mas aí o redux volta pra nos atazanar em dobro."),Yo.forEach(l),ea=v(e),aa=p(e,"P",{});var as=f(aa);oa=h(as,"Então, vamos por uns minutos esquecer de actions e reducers e imaginemos um\n  objeto chamado LoginEvent. Sempre que executamos algo sobre esse objeto\n  passando email e senha, coisas acontecem e os dados corretos (de sucesso ou\n  falha do login) são passados pros componentes. Imagine que você não precise\n  saber nada sobre esse objeto, apenas seu nome. Sem reducers, sem actions, sem\n  "),sa=p(as,"CODE",{});var os=f(sa);ra=h(os,"connect"),os.forEach(l),na=h(as,"\n  ou\n  "),ta=p(as,"CODE",{});var ss=f(ta);ia=h(ss,"mapStateToProps"),ss.forEach(l),ca=h(as,". Seria algo mais ou menos assim:"),as.forEach(l),ma=v(e),da=p(e,"FIGURE",{});var rs=f(da);ua=p(rs,"IMG",{src:!0,alt:!0}),rs.forEach(l),la=v(e),va=p(e,"P",{});var ns=f(va);fa=h(ns,"Legal, mas onde colocaríamos todo seu comportamento? Onde tá o código que faz\n  a requisição? Como lidar com casos de erro? Digamos que, além do objeto de\n  evento, nós tenhamos algo que gerencia todo o fluxo do evento, que chamaríamos\n  de Event Manager:"),ns.forEach(l),ha=v(e),ga=p(e,"FIGURE",{});var ts=f(ga);qa=p(ts,"IMG",{src:!0,alt:!0}),ts.forEach(l),Ea=v(e),xa=p(e,"P",{});var is=f(xa);Pa=h(is,"Melhor. Mas como esse manager tá implementado? Porque, se a gente precisa\n  lidar com o fluxo inteiro dentro dele, ele precisa saber de muita coisa: como\n  fazer a requisição, por exemplo, ou o que fazer com o estado global quando a\n  requisição tiver sucesso ou falha. Ah, e seria bom ter um estado intermediário\n  quando a requisição começa, porque a gente ama spinners de loading! Eita,\n  esqueci que eu preciso de um estado inicial pra esse evento também, pra gente\n  ter dados antes mesmo da requisição. Calma, calma, vamo lá:"),is.forEach(l),Ca=v(e),Ma=p(e,"FIGURE",{});var cs=f(Ma);za=p(cs,"IMG",{src:!0,alt:!0}),cs.forEach(l),ja=v(e),Da=p(e,"P",{});var ms=f(Da);Ia=h(ms,"É mais ou menos isso que a gente precisa, né? Mas então, como que a gente\n  faria pra registrar quais Componentes que poderiam disparar esse Evento? Como\n  que o Componente pegaria os dados desse evento? Tamo quase lá:"),ms.forEach(l),Na=v(e),Sa=p(e,"FIGURE",{});var ds=f(Sa);La=p(ds,"IMG",{src:!0,alt:!0}),ds.forEach(l),Oa=v(e),Aa=p(e,"P",{});var us=f(Aa);ka=h(us,"E essa é exatamente a API atual para um Evento HTTP (HTTPEvent) da lib\n  "),Ga=p(us,"CODE",{});var ps=f(Ga);Ha=h(ps,"rel-events"),ps.forEach(l),ya=h(us,". Nada de actions nem reducers, nada de acoplar as\n  camadas de domínio com a de componentes, nada. Claro, a gente precisaria antes\n  configurar como nossa lib se encaixa com o redux, mas geralmente é uma\n  configuração de uma vez só, e muito bem documentada\n  "),wa=p(us,"A",{href:!0});var ls=f(wa);Fa=h(ls,"na nossa\n    documentação (ainda só em inglês, com português em breve"),ls.forEach(l),Ua=h(us,")."),us.forEach(l),Ba=v(e),Ka=p(e,"H2",{});var vs=f(Ka);Va=h(vs,"Isso parece... bom! Mas e as funcionalidades? Eu quero features!"),vs.forEach(l),Za=v(e),Ja=p(e,"P",{});var fs=f(Ja);_a=h(fs,"Na nossa atual versão beta (0.1.3, de Setembro de 2019), você pode:"),fs.forEach(l),Qa=v(e),Wa=p(e,"UL",{});var hs=f(Wa);Xa=p(hs,"LI",{});var gs=f(Xa);Ya=h(gs,"usar um Evento (Event) básico (pras horas em que você não precisa fazer\n    requisições);"),gs.forEach(l),$a=v(hs),eo=p(hs,"LI",{});var qs=f(eo);ao=h(qs,"encadear um Event/HTTPEvent em outro (útil pra quando você quer buscar mais\n    dados depois que um evento teve sucesso);"),qs.forEach(l),oo=v(hs),so=p(hs,"LI",{});var bs=f(so);ro=h(bs,"ter múltiplos Events registrados para um mesmo Componente (porque você\n    provavelmente vai ter um Componente que precisa ler dados de vários\n    lugares);"),bs.forEach(l),no=v(hs),to=p(hs,"LI",{});var Es=f(to);io=h(Es,"executar código depois das mudanças de estado de um Evento que foi disparado\n    (usando\n    "),co=p(Es,"CODE",{});var xs=f(co);mo=h(xs,"afterDispatch"),xs.forEach(l),uo=h(Es,");"),Es.forEach(l),po=v(hs),lo=p(hs,"LI",{});var Ps=f(lo);vo=h(Ps,"executar código depois das mudanças de estado de uma requisição que teve\n    sucesso (usando\n    "),fo=p(Ps,"CODE",{});var Cs=f(fo);ho=h(Cs,"afterSuccess"),Cs.forEach(l),go=h(Ps,");"),Ps.forEach(l),qo=v(hs),bo=p(hs,"LI",{});var Ms=f(bo);Eo=h(Ms,"executar código depois das mudanças de estado de uma requisição que falhou\n    (usando\n    "),xo=p(Ms,"CODE",{});var zs=f(xo);Po=h(zs,"afterFailure"),zs.forEach(l),Co=h(Ms,");"),Ms.forEach(l),Mo=v(hs),zo=p(hs,"LI",{});var Ts=f(zo);To=h(Ts,"avaliar se um evento deve ser disparado ou não (com o método\n    "),jo=p(Ts,"CODE",{});var js=f(jo);Do=h(js,"shouldDispatch"),js.forEach(l),Io=h(Ts,"\n    do EventManager)."),Ts.forEach(l),hs.forEach(l),No=v(e),So=p(e,"P",{});var Ds=f(So);Lo=h(Ds,"E muito mais! Tudo isso sem a carga cognitiva, sem as constantes aleatórias,\n  sem os nomes de store manuais e toda a má experiência de desenvolvimento do\n  redux. E a melhor parte: sem uma grande curva de aprendizado. Esse post tem\n  basicamente tudo que você precisa saber pra usar nossa biblioteca no\n  dia-a-dia. Mesmo. Eu sei, porque tô usando!"),Ds.forEach(l),Ro=v(e),Oo=p(e,"P",{});var Is=f(Oo);Ao=h(Is,"Então se você gostou,\n  "),ko=p(Is,"A",{href:!0});var Ns=f(ko);Go=h(Ns,"dá uma olhada no nosso\n    repositório no github"),Ns.forEach(l),Ho=h(Is,"\n  pra começar a usar e comparilhe o amor! Valeu pela atenção, e eu vejo vocês na\n  próxima!"),Is.forEach(l),this.h()},h:function(){document.title="\n    Mantendo o estado global de uma maneira sã com rel-events -\n    luciano@ratamero.com\n  ",g(a,"name","description"),g(a,"content","Nesse post, discutiremos como usar a rel-events para lidar com o estado global de sua app React de uma maneira mais fácil e sã :]"),g(o,"name","keywords"),g(o,"content","Luciano Ratamero, rel-events, react, redux, grandes projetos, arquitetura, planejamento, frontend, javascript, frameworks"),g(T,"class","meta"),N.src!==(S=x)&&g(N,"src",S),g(N,"alt","Ilustração com as logos do React e do Redux"),g(k,"href","/en/keeping-global-state-management-sane-with-rel-events/"),g(F,"href","https://github.com/labcodes/rel-events"),W.src!=="https://imgs.xkcd.com/comics/standards.png"&&g(W,"src","https://imgs.xkcd.com/comics/standards.png"),g(W,"alt","xkcd tá sempre certo"),g(Q,"href","https://xkcd.com/927/"),g(te,"href","https://github.com/labcodes/react-redux-api-tools/"),g(_e,"href","https://labcodes.com.br/blog/pt/mantendo-o-estado-global-de-uma-maneira-sa-com-rel-events.html"),ua.src!==(pa=P)&&g(ua,"src",pa),g(ua,"alt","Evento Imaginário"),qa.src!==(ba=C)&&g(qa,"src",ba),g(qa,"alt","Basic rel-events HTTPEvent"),za.src!==(Ta=M)&&g(za,"src",Ta),g(za,"alt","LoginEventManager"),La.src!==(Ra=z)&&g(La,"src",Ra),g(La,"alt","Registering the component"),g(wa,"href","https://github.com/labcodes/rel-events/tree/master/docs"),g(ko,"href","https://github.com/labcodes/rel-events")},m:function(e,c){q(document.head,a),q(document.head,o),b(e,s,c),b(e,r,c),q(r,n),q(n,t),b(e,i,c),b(e,T,c),q(T,j),b(e,D,c),b(e,I,c),q(I,N),b(e,L,c),b(e,R,c),q(R,O),q(O,A),q(O,k),q(k,G),b(e,H,c),b(e,y,c),q(y,w),q(y,F),q(F,U),q(y,B),b(e,K,c),b(e,V,c),q(V,Z),b(e,J,c),b(e,_,c),q(_,Q),q(Q,W),b(e,X,c),b(e,Y,c),q(Y,$),b(e,ee,c),b(e,ae,c),q(ae,oe),q(ae,se),q(se,re),q(ae,ne),q(ae,te),q(te,ie),q(ie,ce),q(ae,me),b(e,de,c),b(e,ue,c),q(ue,pe),q(ue,le),q(le,ve),q(ue,fe),q(ue,he),q(he,ge),q(ue,qe),b(e,be,c),b(e,Ee,c),q(Ee,xe),q(Ee,Pe),q(Pe,Ce),q(Ee,Me),b(e,ze,c),b(e,Te,c),q(Te,je),q(Te,De),q(De,Ie),q(Te,Ne),b(e,Se,c),b(e,Le,c),q(Le,Re),q(Le,Oe),q(Oe,Ae),q(Le,ke),b(e,Ge,c),b(e,He,c),q(He,ye),q(ye,we),q(He,Fe),b(e,Ue,c),b(e,Be,c),q(Be,Ke),b(e,Ve,c),b(e,Ze,c),q(Ze,Je),q(Ze,_e),q(_e,Qe),q(Ze,We),q(Ze,Xe),q(Xe,Ye),q(Ze,$e),b(e,ea,c),b(e,aa,c),q(aa,oa),q(aa,sa),q(sa,ra),q(aa,na),q(aa,ta),q(ta,ia),q(aa,ca),b(e,ma,c),b(e,da,c),q(da,ua),b(e,la,c),b(e,va,c),q(va,fa),b(e,ha,c),b(e,ga,c),q(ga,qa),b(e,Ea,c),b(e,xa,c),q(xa,Pa),b(e,Ca,c),b(e,Ma,c),q(Ma,za),b(e,ja,c),b(e,Da,c),q(Da,Ia),b(e,Na,c),b(e,Sa,c),q(Sa,La),b(e,Oa,c),b(e,Aa,c),q(Aa,ka),q(Aa,Ga),q(Ga,Ha),q(Aa,ya),q(Aa,wa),q(wa,Fa),q(Aa,Ua),b(e,Ba,c),b(e,Ka,c),q(Ka,Va),b(e,Za,c),b(e,Ja,c),q(Ja,_a),b(e,Qa,c),b(e,Wa,c),q(Wa,Xa),q(Xa,Ya),q(Wa,$a),q(Wa,eo),q(eo,ao),q(Wa,oo),q(Wa,so),q(so,ro),q(Wa,no),q(Wa,to),q(to,io),q(to,co),q(co,mo),q(to,uo),q(Wa,po),q(Wa,lo),q(lo,vo),q(lo,fo),q(fo,ho),q(lo,go),q(Wa,qo),q(Wa,bo),q(bo,Eo),q(bo,xo),q(xo,Po),q(bo,Co),q(Wa,Mo),q(Wa,zo),q(zo,To),q(zo,jo),q(jo,Do),q(zo,Io),b(e,No,c),b(e,So,c),q(So,Lo),b(e,Ro,c),b(e,Oo,c),q(Oo,Ao),q(Oo,ko),q(ko,Go),q(Oo,Ho)},p:E,i:E,o:E,d:function(e){l(a),l(o),e&&l(s),e&&l(r),e&&l(i),e&&l(T),e&&l(D),e&&l(I),e&&l(L),e&&l(R),e&&l(H),e&&l(y),e&&l(K),e&&l(V),e&&l(J),e&&l(_),e&&l(X),e&&l(Y),e&&l(ee),e&&l(ae),e&&l(de),e&&l(ue),e&&l(be),e&&l(Ee),e&&l(ze),e&&l(Te),e&&l(Se),e&&l(Le),e&&l(Ge),e&&l(He),e&&l(Ue),e&&l(Be),e&&l(Ve),e&&l(Ze),e&&l(ea),e&&l(aa),e&&l(ma),e&&l(da),e&&l(la),e&&l(va),e&&l(ha),e&&l(ga),e&&l(Ea),e&&l(xa),e&&l(Ca),e&&l(Ma),e&&l(ja),e&&l(Da),e&&l(Na),e&&l(Sa),e&&l(Oa),e&&l(Aa),e&&l(Ba),e&&l(Ka),e&&l(Za),e&&l(Ja),e&&l(Qa),e&&l(Wa),e&&l(No),e&&l(So),e&&l(Ro),e&&l(Oo)}}}var D=function(a){e(c,t);var o=T(c);function c(e){var a;return s(this,c),a=o.call(this),r(n(a),e,null,j,i,{}),a}return c}();export default D;
